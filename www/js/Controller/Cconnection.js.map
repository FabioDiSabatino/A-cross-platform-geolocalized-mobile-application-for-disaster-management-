{"version":3,"file":"Cconnection.js","sourceRoot":"","sources":["../../../scripts/Controller/Cconnection.ts"],"names":[],"mappings":"AAAC,IAAU,UAAU,CAoDpB;AApDA,WAAU,UAAU,EAAC,CAAC;IACnB,YAAY,CAAC;IACb;QAGI;YACI,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QAC1B,CAAC;QAKM,oCAAe,GAAtB,UAAuB,CAAS;YAAhC,iBAsBC;YArBG;gBACI,IAAI,UAAU,GAAW,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;gBAC9C,CAAC,CAAC,IAAI,CAAC;oBACH,GAAG,EAAE,uCAAuC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM;oBACnE,IAAI,EAAE,KAAK;oBACX,KAAK,EAAE,KAAK;oBACZ,QAAQ,EAAE,WAAW;oBACrB,KAAK,EAAE,KAAK;oBACZ,OAAO,EAAE,8BAA8B;oBACvC,OAAO,EAAE;wBACL,KAAI,CAAC,YAAY,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,UAAU,CAAC,CAAC;wBACzD,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BACV,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,GAAG,CAAC,CAAC;4BAC1C,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,CAAC,GAAG,cAAc,GAAG,KAAI,CAAC,YAAY,CAAC,CAAC;wBAC5E,CAAC;oBACL,CAAC;oBACD,KAAK,EAAE;wBACH,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;oBACzC,CAAC;iBACJ,CAAC,CAAC;;YAnBP,GAAG,CAAC,CAAC,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;;aAoBrC;QACL,CAAC;;QAKM,+BAAU,GAAjB,UAAkB,YAA0B;YAUxC,YAAY,CAAC,MAAM,EAAE,CAAC;QAC1B,CAAC;QACL,iBAAC;IAAD,CAAC,AAjDD,IAiDC;IAjDY,qBAAU,aAiDtB,CAAA;AACL,CAAC,EApDU,UAAU,KAAV,UAAU,QAoDpB","sourcesContent":["﻿namespace Controller {\r\n    \"use strict\";\r\n    export class Connection {\r\n        private request_time: number;\r\n\r\n        public constructor() {\r\n            this.request_time = 0;\r\n        }\r\n        /**\r\n         * Controlla se è possibile stabilire una connessione nei confronti di OpenStreetMap.\r\n         * @param x Numero di tentativi da effettuare.\r\n         */\r\n        public checkConnection(x: number) {\r\n            for (let i: number = 1; i < x + 1; ++i) {\r\n                let start_time: number = new Date().getTime();\r\n                $.ajax({\r\n                    url: \"http://c.tile.openstreetmap.fr/hot/9/\" + i + \"/\" + i + \".png\",\r\n                    type: \"GET\",\r\n                    async: false,\r\n                    mimeType: \"image/png\",\r\n                    cache: false,\r\n                    accepts: \"image/webp,image/*,*/*;q=0.8\",\r\n                    success: () => {\r\n                        this.request_time += (new Date().getTime() - start_time);\r\n                        if (i === x) {\r\n                            this.request_time = this.request_time / i;\r\n                            console.log(\"tempo medio di \" + i + \" richieste: \" + this.request_time);\r\n                        }\r\n                    },\r\n                    error: () => {\r\n                        console.log(\"errore richiesta ajax\");\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Cleares cache\r\n         */\r\n        public clearCache(offlineLayer: OfflineLayer) {\r\n            /* var success = function(status) {\r\n                 alert('cache pulita');\r\n             }\r\n        \r\n             var error = function(status) {\r\n                 alert('Errore nella pulizia..');\r\n             }\r\n        \r\n             window.cache.clear( success, error );*/\r\n            offlineLayer.redraw();\r\n        }\r\n    }\r\n}"]}