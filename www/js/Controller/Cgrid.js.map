{"version":3,"file":"Cgrid.js","sourceRoot":"","sources":["../../../scripts/Controller/Cgrid.ts"],"names":[],"mappings":"AAAA,IAAO,UAAU,CAmDhB;AAnDD,WAAO,UAAU,EAAC,CAAC;IACf,YAAY,CAAC;IACb;QAAA;QAgDA,CAAC;QA1CiB,aAAQ,GAAtB,UAAuB,MAAgB,EAAE,MAAe;YACpD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YACnC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAC9B,CAAC;YACD,IAAI,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;YACnG,IAAI,iBAAiB,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,CAAC;YAC7F,IAAI,iBAAiB,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;YAC7F,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC,SAAS,CAAC;YACvE,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC,SAAS,CAAC;YACvE,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC;YAClE,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE,iBAAiB,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;QACtF,CAAC;QAMa,kBAAa,GAA3B,UAA4B,IAAyB;YACjD,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG,CAAC,CAAC,EAC3E,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/D,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;QASa,aAAQ,GAAtB,UAAuB,EAAY,EAAE,EAAY,EAAE,QAAkB;YAGjE,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACX,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;gBACtD,MAAM,CAAC,EAAE,WAAW,EAAE,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;YAChF,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,EAAE,WAAW,EAAE,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC;YAC9C,CAAC;QACL,CAAC;QACL,WAAC;IAAD,CAAC,AAhDD,IAgDC;IAhDY,eAAI,OAgDhB,CAAA;AACL,CAAC,EAnDM,UAAU,KAAV,UAAU,QAmDhB","sourcesContent":["module Controller {\r\n    \"use strict\";\r\n    export class Grid {\r\n        /**\r\n         * Tronca latitudine e longitudine della coordinata passata alla cifra specificata\r\n         * nella variabile dimSys, in accordo con l'algoritmo di santiago\r\n         * @param latLng Coordinata da troncare\r\n         */\r\n        public static calcCell(latLng: L.LatLng, dimSys?: number) {\r\n            if (dimSys) {\r\n                var cut = Math.pow(10, dimSys);\r\n            } else {\r\n                var cut = Math.pow(10, 4);\r\n            }\r\n            var coordinates = L.latLng(Math.floor(latLng.lat * cut) / cut, Math.floor(latLng.lng * cut) / cut);\r\n            var perpendicular_lng = L.latLng(Math.floor(coordinates.lat * 1000) / 1000, coordinates.lng);\r\n            var perpendicular_lat = L.latLng(coordinates.lat, Math.floor(coordinates.lng * 1000) / 1000);\r\n            var dist_lat = this.calcDist(coordinates, perpendicular_lng).haversine;\r\n            var dist_lng = this.calcDist(coordinates, perpendicular_lat).haversine;\r\n            var cell = [Math.floor(dist_lat / 22), Math.floor(dist_lng / 16)];\r\n            return ([{ zero: L.latLng(perpendicular_lat.lat, perpendicular_lng.lng) }, cell]);\r\n        }\r\n\r\n        /**\r\n         * Ottiene le coordinate a partire dalla cella\r\n         * @param data\r\n         */\r\n        public static coordFromCell(data: Entity.ILocalizable) {\r\n            var result = L.latLng(data.Position.lat + 0.0001 + (data.Cell.lat * 0.0001 * 2),\r\n                data.Position.lng + 0.0001 + (data.Cell.lng * 0.0001 * 2));\r\n            return result;\r\n        }\r\n\r\n        /**\r\n         * Calcola la distanza tra due cordinate col metodo Haversine e, opzionalmente, con\r\n         * il metodo Vincenty.\r\n         * @param c1 Prima coordinata\r\n         * @param c2 Seconda coordinata\r\n         * @param vincenty Soecifica se utilizzare anche il metodo Vincenty o meno.\r\n         */\r\n        public static calcDist(c1: L.LatLng, c2: L.LatLng, vincenty?: boolean): Distance {\r\n            // type se uguale a vincenty il metodo utilizza i due algoritmi e restituisce un \r\n            // un array con le due distanze\r\n            if (vincenty) {\r\n                console.log(\"utilizzo anche il metodo di vincenty..\");\r\n                return { \"haversine\": c1.distanceTo(c2), \"vincenty\": distVincenty(c1, c2) };\r\n            } else {\r\n                return { \"haversine\": c1.distanceTo(c2) };\r\n            }\r\n        }\r\n    }\r\n}"]}