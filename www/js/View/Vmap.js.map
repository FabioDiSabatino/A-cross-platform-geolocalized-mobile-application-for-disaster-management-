{"version":3,"file":"Vmap.js","sourceRoot":"","sources":["../../../scripts/View/Vmap.ts"],"names":[],"mappings":"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","sourcesContent":["ï»¿namespace View {\r\n    \"use strict\";\r\n    export class Map {\r\n        private myPositionMarker: L.ILayer;\r\n        private first: boolean;\r\n        get First(): boolean {\r\n            return this.first;\r\n        }\r\n        set First(f: boolean) {\r\n            this.first = f;\r\n        }\r\n        private meIcon: L.Icon;\r\n        private centerMe: boolean;\r\n        get CenterMe(): boolean {\r\n            return this.centerMe;\r\n        }\r\n        set CenterMe(c: boolean) {\r\n            this.centerMe = c;\r\n        }\r\n        private markers: L.MarkerClusterGroup;\r\n        private clicked: L.Path;\r\n        private map: L.Map;\r\n\r\n        /**\r\n         * Inizializza una nuova mappa.\r\n         */\r\n        public constructor(map: L.Map) {\r\n            this.map = map;\r\n            this.myPositionMarker = undefined;\r\n            this.first = true;\r\n            this.centerMe = true;\r\n            this.meIcon = L.icon({\r\n                iconUrl: \"./img/marker-icon.png\",\r\n                iconRetinaUrl: \"./img/marker-icon-2x.png\",\r\n                iconSize: [25, 41],\r\n                popupAnchor: [-3, -76],\r\n                shadowUrl: \"./img/marker-shadow.png\",\r\n                shadowRetinaUrl: \"./img/marker-shadow.png\",\r\n                shadowSize: [30, 45],\r\n                shadowAnchor: [10, 20],\r\n            });\r\n            this.markers = L.markerClusterGroup({\r\n                maxClusterRadius: 120,\r\n                iconCreateFunction: (cluster: L.MarkerClusterGroup) => {\r\n                    return L.divIcon({\r\n                        html: \"<strong>\" + cluster.getChildCount() + \"</strong>\",\r\n                        className: \"foiCluster\", iconSize: L.point(40, 40)\r\n                    });\r\n                },\r\n                spiderfyDistanceMultiplier: 2, showCoverageOnHover: false, zoomToBoundsOnClick: false\r\n            });\r\n            this.markers.on(\"clusterclick\", (a: any) => {\r\n                a.layer.spiderfy();\r\n                var markers: L.Marker[] = a.layer.getAllChildMarkers();\r\n                for (let i = 0; i < markers.length; ++i) {\r\n                    markers[i].openPopup();\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Aggiunge un marker ad una mappa.\r\n         * @param dati Posizione del marker\r\n         */\r\n        addMarker(dati: L.LatLng): void {\r\n            if (this.first) {\r\n                if (this.centerMe) {\r\n                    this.map.setView(dati, 17);\r\n                }\r\n                this.first = false;\r\n            } else {\r\n                this.map.removeLayer(this.myPositionMarker);\r\n            }\r\n            this.myPositionMarker = L.circleMarker(dati, { radius: 10 }).addTo(this.map);\r\n        }\r\n\r\n        /**\r\n         * Aggiunge un FOI alla mappa\r\n         * @param dati FOI\r\n         */\r\n        addFoi(dati: Entity.FoiCollection): void {\r\n            for (let i = 0; i < dati.length; ++i) {\r\n                var coordinates = Controller.Grid.coordFromCell(dati[i]);\r\n                var foi = new (L.Icon.extend({\r\n                    \"options\": {\r\n                        \"iconSize\": [40, 50],\r\n                        \"iconUrl\": dati[i].Picture\r\n                    }\r\n                }));\r\n                var marker_foi = L.marker(coordinates, { icon: foi });\r\n                var foi_popup = \"<h3>\" + dati[i].StatusCode + \"</h3> <p class='bolded'> at \" +\r\n                    dati[i].LatestUpdate.toLocaleDateString() + \"</p>\";\r\n                marker_foi.bindPopup(foi_popup);\r\n                this.markers.addLayer(marker_foi);\r\n            }\r\n            this.map.addLayer(this.markers);\r\n        }\r\n\r\n        /**\r\n         * Aggiunge un POI alla pamma\r\n         * @param dati POI\r\n         */\r\n        addPoi(dati: Entity.PoiCollection): void {\r\n            for (let i = 0; i < dati.length; ++i) {\r\n                var coordinates = Controller.Grid.coordFromCell(dati[i]);\r\n                var poi = new (L.Icon.extend({\r\n                    \"options\": {\r\n                        \"iconSize\": [40, 50],\r\n                        \"iconUrl\": \"./img/\" + dati[i].Picture + \".png\"\r\n                    }\r\n                }));\r\n                var marker_poi = L.marker(coordinates, { icon: poi });\r\n                var poi_popup = \"<h3>\" + dati[i].EmergencyCode + \"</h3> <p class='bolded'> signaled \" +\r\n                    dati[i].EmergencyCode + \" times latest at \" + dati[i].LatestUpdate.toLocaleDateString() + \"</p>\";\r\n                marker_poi.bindPopup(poi_popup);\r\n                this.markers.addLayer(marker_poi);\r\n            }\r\n            this.map.addLayer(this.markers);\r\n        }\r\n\r\n        /**\r\n         * Aggiunge una news alla pamma\r\n         * @param dati Posizione della news\r\n         */\r\n        addNews(dati: any[]) {\r\n            for (let i = 0; i < dati.length; ++i) {\r\n                var coordinates = Controller.Grid.coordFromCell(dati[i].position);\r\n                var news = new (L.Icon.extend({\r\n                    \"options\": {\r\n                        \"iconSize\": [50, 60],\r\n                        \"iconUrl\": \"./img/newsicon.png\"\r\n                    }\r\n                }));\r\n                var marker_news = L.marker(coordinates, { icon: news });\r\n                var news_popup = \"<h3 class='title-news'>\" + dati[i].title + \"</h3> <p class='bolded'>\" +\r\n                    dati[i].content + \". At \" + dati[i].times + \"</p> <p\";\r\n                marker_news.bindPopup(news_popup);\r\n                this.markers.addLayer(marker_news);\r\n            }\r\n            this.map.addLayer(this.markers);\r\n        }\r\n\r\n\r\n        addHold(pos: L.LatLng) {\r\n            if (this.clicked) {\r\n                this.map.removeLayer(this.clicked);\r\n            }\r\n            this.map.setView(pos, 15);\r\n            this.clicked = L.circleMarker(pos, { radius: 10, color: \"red\" }).addTo(this.map);\r\n        }\r\n\r\n        removeMarkers() {\r\n            this.map.removeLayer(this.markers);\r\n        }\r\n    }\r\n}"]}